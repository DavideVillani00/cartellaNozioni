///CARTELLA LOCALE DA INSERIRE SU GITHUB (CARTELLA REMOTA CREATA SU GITHUB)
1 INIZIALIZZA GIT:
	git init
2 AGGIUNGI TUTTI I FILE:
	git add .
3 AGGIUNGI MODIFICA CON COMMENTO (CI Sarà DA CARICARLO SU GITHUB POI):
	git commit -m "COMMENTO"
4 PRENDERE LA CARTELLA SU GITHUB:
	git remote add origin https………
5 CARICARE IL BRENCH SU GITHUB:
	git push origin master

!PRENDERE UN PROGETTO CREATO SU GIT HUB!
1 CREA UN PROGETTO ONLINE O PRENDINE 1 SU GITHUB (COPIA URL)
2 SU VS CODE CLONARE IL PROGETTO
	git clone https://(URL)
3 APRI CARTELLA SU VS CODE




!MODIFICA!
1 INDICA QUALI ELEMENTI VUOI INCLUDERE NEL SALVATAGGIO
	git add {/ELEMENTO/ OPPURE /.(TUTTO)/}
		ES: git add .
		OPPPURE : git add index.html
2 CREA UN COMMIT (SALVATAGGIO)
	git commit -m "TITOLO-COMMENTO" -m "DESCRIZIONE"
3 SPINGI TUTTO ONLINE (UNISCE GIT FETCH E GIT MERGE)
	git push

!ALTRI INPUT! 
- VEDERE LO STATO
	git status
- VEDERE TUTTO LO STORICO
	git log
- TORNARE INDIETRO NEI COMMIT (PRECEDENTE)
	git reset
- TORNARE INDIETRO NEI COMMIT (SPECIFICO)
	git reset CODICECOMMIT
- SCARICARE DAL REPOSITORY REMOTO SENZA UNIRE
	git fetch
- AGGIORNA IL REPOSITORY LOCALE CON QUELLO ONLINE
	git pull
- SETTA IL PUNTO DI ORIGINE REMOTO
	git remote add origin https://URL
- PUSHA SUL ORIGINE PRECISA 
	git push origin main
-CAMBIARE USER NAME E MAIL 
	git config user.name "TUO USERNAME"
	git config user.email "TUA MAIL"
		AGGIUNGI GLOBAL PER SETTARLI OVUNQUE
			git config --global user.name "NOME"
-VEDERE LO STATO DELL'UTENTE
	git config --list
	OPPURE 
	git config --global --list

!BRANCH!
1 CREA E SPOSTATI NEL NUOVO BRANCH
	git checkout -b NOMEBRANCH
		es: git checkout -b dev
2 SPOSTATI NEI BRANCH
	git checkout NOMEBRANCH
3 UNISCI I BRANCH 
	VAI SU IL MASTER 
		git merge NOMEBRANCH
			es: git merge dev





